{"version":3,"sources":["hooks/todoContext.js","hooks/useLocalStorage.js","components/TodoCounter.js","components/TodoSearch.js","components/TodoList.js","components/TodoItem.js","components/CreateTodoButton.js","components/Modal.js","components/TodoForm.js","components/AppUI.js","components/App.js","index.js"],"names":["TodoContext","React","createContext","TodoProvider","props","itemName","initialValue","useState","error","setError","loading","setLoading","item","setItem","useEffect","setTimeout","parsedItem","localStorageItem","localStorage","getItem","JSON","parse","stringify","saveItem","newItem","stringifiedItem","useLocalStorage","todos","saveTodos","searchValue","setSearchValue","openModal","setOpenModal","completedTodos","filter","todo","completed","length","totalTodos","searchedTodos","todoText","text","toLowerCase","searchText","includes","Provider","value","addTodo","newTodos","push","completeTodo","todoIndex","findIndex","deleteTodo","splice","children","TodoCounter","useContext","className","TodoSearch","placeholder","onChange","event","target","TodoList","TodoItem","onClick","onComplete","onDelete","CreateTodoButton","Modal","ReactDOM","createPortal","document","getElementById","TodoForm","newText","setNewText","onSubmit","preventDefault","alert","type","AppUI","Fragment","map","App","render"],"mappings":"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","file":"static/js/main.6af69606.chunk.js","sourcesContent":["import React from \"react\";\nimport {useLocalStorage} from './useLocalStorage'\n\nconst TodoContext = React.createContext();\n\nfunction TodoProvider(props) {\n  const {\n    item: todos,\n    saveItem: saveTodos,\n    loading,\n    error,\n  } = useLocalStorage('TODOS_V1', []);\n  const [searchValue, setSearchValue] = React.useState('');\n  const [openModal, setOpenModal] = React.useState(false);\n\n  const completedTodos = todos.filter(todo => !!todo.completed).length;\n  const totalTodos = todos.length;\n\n  let searchedTodos = [];\n\n  if (!searchValue.length >= 1) {\n    searchedTodos = todos;\n  } else {\n    searchedTodos = todos.filter(todo => {\n      const todoText = todo.text.toLowerCase();\n      const searchText = searchValue.toLowerCase();\n      return todoText.includes(searchText);\n    });\n  }\n\n  const completeTodo = (text) => {\n    const todoIndex = todos.findIndex(todo => todo.text === text);\n    const newTodos = [...todos];\n    newTodos[todoIndex].completed = true;\n    saveTodos(newTodos);\n  };\n\n  const addTodo = (text) => {\n    const newTodos = [...todos];\n    newTodos.push({\n      completed: false,\n      text,\n    })\n    saveTodos(newTodos);\n  };\n\n  const deleteTodo = (text) => {\n    const todoIndex = todos.findIndex(todo => todo.text === text);\n    const newTodos = [...todos];\n    newTodos.splice(todoIndex, 1);\n    saveTodos(newTodos);\n  };\n  \n  return (\n    <TodoContext.Provider value={{\n      loading,\n      error,\n      totalTodos,\n      completedTodos,\n      addTodo,\n      searchValue,\n      setSearchValue,\n      searchedTodos,\n      completeTodo,\n      deleteTodo,\n      openModal,\n      setOpenModal,\n    }}>\n      {props.children}\n    </TodoContext.Provider>\n  );\n}\n\nexport { TodoContext, TodoProvider };","import React from 'react';\n\nfunction useLocalStorage(itemName, initialValue) {\n  const [error, setError] = React.useState(false);\n  const [loading, setLoading] = React.useState(true);\n  const [item, setItem] = React.useState(initialValue);\n  \n  React.useEffect(() => {\n    setTimeout(() => {\n      try {\n        const localStorageItem = localStorage.getItem(itemName);\n        let parsedItem;\n        \n        if (!localStorageItem) {\n          localStorage.setItem(itemName, JSON.stringify(initialValue));\n          parsedItem = initialValue;\n        } else {\n          parsedItem = JSON.parse(localStorageItem);\n        }\n\n        setItem(parsedItem);\n        setLoading(false);\n      } catch(error) {\n        setError(error);\n      }\n    }, 1000);\n  },[]);\n  \n  const saveItem = (newItem) => {\n    try {\n      const stringifiedItem = JSON.stringify(newItem);\n      localStorage.setItem(itemName, stringifiedItem);\n      setItem(newItem);\n    } catch(error) {\n      setError(error);\n    }\n  };\n\n  return {\n    item,\n    saveItem,\n    loading,\n    error,\n  };\n}\n\nexport { useLocalStorage };","import React from \"react\";\nimport '../css/TodoCounter.css'\nimport { TodoContext } from \"../hooks/todoContext\";\n\nfunction TodoCounter() {\n  const { totalTodos, completedTodos } = React.useContext(TodoContext);\n  \n  return (\n    <h2 className=\"TodoCounter\">Has completado {completedTodos} de {totalTodos} TODOs</h2>\n  );\n}\n\nexport { TodoCounter };","import React from \"react\";\nimport '../css/TodoSearch.css'\nimport { TodoContext } from \"../hooks/todoContext\";\n\nfunction TodoSearch() {\n  const { searchValue, setSearchValue } = React.useContext(TodoContext);\n  \n  const onSearchValueChange = (event) => {\n    setSearchValue(event.target.value);\n  };\n\n  return (\n    <input\n      className=\"TodoSearch\"\n      placeholder=\"Cebolla\"\n      value={searchValue}\n      onChange={onSearchValueChange}\n    />\n  );\n}\n\nexport { TodoSearch };","import React from \"react\";\nimport '../css/TodoList.css'\n\nfunction TodoList(props) {\n  return (\n    <section>\n      <ul>\n        {props.children}\n      </ul>\n    </section>\n  );\n}\n\nexport { TodoList };","import React from \"react\";\nimport '../css/TodoItem.css'\n\nfunction TodoItem(props) {\n  return (\n    <li className=\"TodoItem\">\n      <span\n        className={`Icon Icon-check ${props.completed && 'Icon-check--active'}`}\n        onClick={props.onComplete}\n      >\n        âˆš\n      </span>\n      <p className={`TodoItem-p ${props.completed && 'TodoItem-p--complete'}`}>\n        {props.text}\n      </p>\n      <span\n        className=\"Icon Icon-delete\"\n        onClick={props.onDelete}\n      >\n        X\n      </span>\n    </li>\n  );\n}\n\nexport { TodoItem };","import React from 'react';\nimport '../css/CreateTodoButton.css';\n\nfunction CreateTodoButton(props) {\n  const onClickButton = () => {\n    props.setOpenModal(!props.openModal);\n  };\n  \n  return (\n    <button\n      className=\"CreateTodoButton\"\n      onClick={onClickButton}\n    >\n      +\n    </button>\n  );\n}\n\nexport { CreateTodoButton };","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../css/Modal.css';\n\nfunction Modal({ children }) {\n  return ReactDOM.createPortal(\n    <div className=\"ModalBackground\">\n      {children}\n    </div>,\n    document.getElementById('modal')\n  );\n}\n\nexport { Modal };","import React from \"react\";\nimport { TodoContext } from \"../hooks/todoContext\";\nimport '../css/TodoForm.css'\n\nfunction TodoForm () {\n  const [newText, setNewText] = React.useState('')\n  const {setOpenModal, addTodo} = React.useContext(TodoContext)\n\n  const handleCancel = () => {\n    setOpenModal(false)\n  }\n\n  const handleOnChange = (event) => {\n    setNewText(event.target.value)\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    if (!newText) {\n      alert('Ingresa una tarea')\n    } else {\n      addTodo(newText)\n      setOpenModal(false)\n    }\n  }\n  return (\n    <form onSubmit={handleSubmit} >\n      <label>Ingresa una actividad</label>\n      <textarea placeholder = \" Ingresa una actividad\" value={newText} onChange={handleOnChange}/>\n      <div className=\"TodoForm-buttonContainer\">\n        <button \n          className=\"TodoForm-button TodoForm-button-cancel\"\n          onClick = {handleCancel}\n        >\n          Cancelar\n        </button>\n        <button\n          className=\"TodoForm-button TodoForm-button-add\"\n          type = \"submit\"\n        >\n          Ingresar\n        </button>\n      </div>\n    </form>\n  )\n}\n\nexport {TodoForm}","import React from 'react';\nimport { TodoContext } from '../hooks/todoContext';\nimport { TodoCounter } from './TodoCounter';\nimport { TodoSearch } from './TodoSearch';\nimport { TodoList } from './TodoList';\nimport { TodoItem } from './TodoItem';\nimport { CreateTodoButton } from './CreateTodoButton';\nimport { Modal } from './Modal';\nimport {TodoForm} from './TodoForm'\n\nfunction AppUI() {\n  const {\n    error,\n    loading,\n    searchedTodos,\n    completeTodo,\n    deleteTodo,\n    openModal,\n    setOpenModal,\n  } = React.useContext(TodoContext);\n  \n  return (\n    <React.Fragment>\n      <TodoCounter />\n      <TodoSearch />\n\n      <TodoList>\n        {error && <p>DesespÃ©rate, hubo un error...</p>}\n        {loading && <p>Estamos cargando, no desesperes...</p>}\n        {(!loading && !searchedTodos.length) && <p>Â¡Crea tu primer TODO!</p>}\n        \n        {searchedTodos.map(todo => (\n          <TodoItem\n            key={todo.text}\n            text={todo.text}\n            completed={todo.completed}\n            onComplete={() => completeTodo(todo.text)}\n            onDelete={() => deleteTodo(todo.text)}\n          />\n        ))}\n      </TodoList>\n\n      {!!openModal && (\n        <Modal>\n          <TodoForm/>\n        </Modal>\n      )}\n\n      <CreateTodoButton\n      openModal = {openModal}\n        setOpenModal={setOpenModal}\n      />\n    </React.Fragment>\n  );\n}\n\nexport { AppUI };","import React from 'react';\nimport { TodoProvider } from '../hooks/todoContext';\nimport { AppUI } from './AppUI';\n\n\nfunction App() {\n  return (\n    <TodoProvider>\n      <AppUI />\n    </TodoProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}